/* ----
   area
   ---- */

.avn-area-bound {
	position: relative;
	margin-left: auto;
	margin-right: auto;
	box-sizing: border-box;
	min-width: @width-min;
	max-width: @width-large;
	border-style: none;
	border-color: @border-color;
}
.avn-area-fill {
	position: relative;
	border: 0 solid @border-color;
	border-top-width: @border-width;
	.fill-gradient-add();
}
.avn-area-nograd {
	&.avn-area-fill , &.avn-area-bound > .avn-area-fill {
		.fill-gradient-remove();
	}
}
.avn-area-border {
	border-bottom-width: @border-width;
}

.avn-area-bound > .avn-area-fill {
	border-color: inherit;
}
@media (min-width: (@width-large + 1)) {
	.avn-area-bound {
		> .avn-area-fill {
			border-left-width: @border-width;
			border-right-width: @border-width;
			&:last-child {
				border-bottom-width: @border-width;
			}
		}
		// Hide the border-bottom-width of the previous .avn-area-bound > .avn-area-fill:last-child
		// Kown issue when using .avn-area-bound without nested .avn-area-fill
		& + & {
			margin-top: -@border-width;
		}
		&.avn-area-spacing {
			margin-top: @margin; // overwrite the previous rule margin-top: -@border-width;
		}
	}
	.avn-area-spacing {
		margin-bottom: @margin;
		box-shadow: @box-shadow;
		border-radius: @border-radius-large;
		.border-radius-inheritance();
	}
	.avn-area-noshad {
		box-shadow: none !important;
	}
}

.avn-area-pad,
.avn-area-bound > .avn-area-fill,
.avn-area-fill > .avn-area-bound {
	padding: @padding-v @padding-h;
}
.avn-area-pad-large {
	padding: (@margin - @line-height-less) @margin !important;
}
.avn-area-nopad {
	padding: 0 !important;
}
