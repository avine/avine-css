
@drop-content-width: 16em;

.drop-hover-gradient(@position, @color, @alpha) {
	background-image: linear-gradient(@position,
		rgba(@color,@color,@color,@alpha) 0%,
		rgba(@color,@color,@color,0) @padding-v
	);
}
@drop-alpha-light: .12;
@drop-alpha-dark: .05;

.avn-grid-wrap > .avn-drop {
	&.avn-hover-wrap > :hover, > .avn-hover-jsOver {
		> :first-child {
			.drop-hover-gradient(bottom; 255; @drop-alpha-light);
		}
		> :last-child {
			.drop-hover-gradient(top; 0; @drop-alpha-dark);
			border-top-width: @border-width;
			border-top-style: solid;
			border-top-color: inherit;
		}
	}
}

.avn-drop-grid(@grid) {
	.avn-grid-wrap {
		> .avn-drop.@{grid} {
			> * {
				> :first-child {
					border-radius: inherit;
				}
				> :last-child {
					box-shadow: @box-shadow;
					border-width: @border-width;
					border-style: solid;
					border-color: inherit;
				}
			}
			&.avn-hover-wrap > :hover, > .avn-hover-jsOver {
				> * {
					background-color: inherit;
					background-repeat: repeat-x;
				}
				> :first-child {
					margin-top: -@border-width;
				}
			}
		}
		&.avn-drop-down > .avn-drop.@{grid} {
			> * {
				border-bottom-left-radius: 0;
				border-bottom-right-radius: 0;
			}
			&.avn-hover-wrap > :hover, > .avn-hover-jsOver {
				> :first-child {
					top: @border-width;
					border-bottom: @border-width solid transparent;
					.drop-hover-gradient(top; 255; @drop-alpha-light);
				}
				> :last-child {
					top: 0;
					margin-top: @drop-height;
					border-radius: 0 0 @border-radius-large @border-radius-large;
					.drop-hover-gradient(bottom; 0; @drop-alpha-dark);
				}
			}
		}
		&.avn-drop-up > .avn-drop.@{grid} {
			> * {
				border-top-left-radius: 0;
				border-top-right-radius: 0;
			}
			&.avn-hover-wrap > :hover, > .avn-hover-jsOver {
				> :first-child {
					bottom: 0;
					border-top: @border-width solid transparent;
					.drop-hover-gradient(bottom; 0; @drop-alpha-dark);
				}
				> :last-child {
					bottom: 0;
					margin-bottom: @drop-height;
					border-radius: @border-radius-large @border-radius-large 0 0;
					.drop-hover-gradient(top; 255; @drop-alpha-light);
				}
			}
		}

		> .avn-drop.@{grid} > .avn-drop-empty > :first-child {
			margin-top: 0 !important;
			top: 0 !important;
			border: none !important;
		}

		&.avn-drop-down > .avn-drop-small.avn-drop.@{grid} {
			&.avn-hover-wrap > :hover, > .avn-hover-jsOver {
				> :last-child { margin-top: @drop-height-small; }
			}
		}
		&.avn-drop-up > .avn-drop-small.avn-drop.@{grid} {
			&.avn-hover-wrap > :hover, > .avn-hover-jsOver {
				> :last-child { margin-bottom: @drop-height-small; }
			}
		}

		// drop fixed

		> .avn-drop.@{grid} {
			&.avn-drop-fixed, &.avn-drop-fixed-full {
				position: static;
				> * { position: static; }
				&.avn-hover-wrap > :hover, > .avn-hover-jsOver {
					> :last-child { transition: opacity 0s; }
				}
			}
			&.avn-drop-fixed-full {
				> * > :last-child { width: auto; }
				&.avn-hover-wrap > :hover, > .avn-hover-jsOver {
					> :last-child { left: -1px; right: -1px; }
				}
			}
		}
	}

	.avn-drop.@{grid} {
		> * {
			> :first-child {
				z-index: 99;
			}
			> :last-child {
				z-index: 98;
				opacity: 0;
				transition: opacity 0s;
				width: @drop-content-width;
			}
		}
		&.avn-hover-wrap > :hover, > .avn-hover-jsOver {
			> :last-child {
				position: absolute;
				opacity: 1;
				transition: opacity .250s ease .125s;
			}
		}

		&.avn-drop-right {
			&.avn-hover-wrap > :hover, > .avn-hover-jsOver {
				> :last-child { left: -@border-width; right: auto; } }
		}
		&.avn-drop-left {
			&.avn-hover-wrap > :hover, > .avn-hover-jsOver {
				> :last-child { right: -@border-width; left: auto; }
			}
		}
		&.avn-hover-wrap > :hover, > .avn-hover-jsOver {
			&.avn-drop-right > :last-child { left: -@border-width; right: auto; }
			&.avn-drop-left > :last-child { right: -@border-width; left: auto; }
		}
	}
}
.avn-drop-grid(avn-grid-small);
@media (min-width: @width-medium) { .avn-drop-grid(avn-grid-medium); }
@media (min-width: @width-large) { .avn-drop-grid(avn-grid-large); }

// Known issue:
// There is no way to restore the 'border-radius' of .avn-grid-border when the grid is displayed vertically.
// Because its behavior depends on .avn-grid-[small|medium|large], which is its child node.
//
//	<div class="avn-grid-wrap avn-grid-border avn-grid-radius">
//		<div class="avn-grid avn-grid-medium">
//			...
//		</div>
//	</div>
//
.avn-drop-down {
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
}
.avn-drop-up {
	border-top-left-radius: 0;
	border-top-right-radius: 0;
}
.avn-drop-down, .avn-drop-up {
	&.avn-grid-spacing {
		&.avn-grid-radius, &.avn-grid-radius-full {
			border-radius: @border-radius-large; // Restore the grid-spacing radius
		}
	}
}

.avn-drop.avn-drop-fixed-full.avn-grid-width-auto {
	&.avn-hover-wrap > :hover, > .avn-hover-jsOver, > .avn-hover-jsOut:hover {
		&:last-child > :first-child {
			border-top-right-radius: 0;
			border-bottom-right-radius: 0;
			border-right-width: @border-width;
			border-right-style: solid;
			border-right-color: inherit;
		}
	}
}

.avn-grid-wrap > .avn-drop {
	> :hover, > .avn-hover-jsOver {
		background-color: lighten(@background-color, 3% * @background-x);
	}
}

.color-addons() {
	&.avn-grid-wrap > .avn-drop {
		> :hover, > .avn-hover-jsOver {
			background-color: darken(@border, 13% * @x);
		}
	}
}
